<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.dromara.warm.flow.orm.mapper.FlowSkipMapper">

    <resultMap type="org.dromara.warm.flow.orm.entity.FlowSkip" id="FlowSkipResult">
        <result property="id" column="id"/>
        <result property="definitionId" column="definition_id"/>
        <result property="nowNodeCode" column="now_node_code"/>
        <result property="nowNodeType" column="now_node_type"/>
        <result property="nextNodeCode" column="next_node_code"/>
        <result property="nextNodeType" column="next_node_type"/>
        <result property="skipName" column="skip_name"/>
        <result property="skipType" column="skip_type"/>
        <result property="skipCondition" column="skip_condition"/>
        <result property="coordinate" column="coordinate"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="delFlag" column="del_flag"/>
        <result property="tenantId" column="tenant_id"/>
    </resultMap>

    <sql id="selectVo">
        select t.id,
               t.definition_id,
               t.now_node_code,
               t.now_node_type,
               t.next_node_code,
               t.next_node_type,
               t.skip_name,
               t.skip_type,
               t.skip_condition,
               t.coordinate,
               t.create_time,
               t.update_time,
               t.del_flag,
               t.tenant_id
        from flow_skip t
    </sql>

    <sql id="paging_end">
        <if test="page !=null and page.pageNum != null and page.pageSize != null">LIMIT
            #{page.pageNum} offset #{page.pageSize}
        </if>
    </sql>

    <sql id="order_by">
        <if test="order != null and order != ''">order by ${order}</if>
    </sql>

    <sql id="select_parameter">
        <where>
            <if test="entity.id != null">and t.id = #{entity.id}</if>
            <if test="entity.definitionId != null">and t.definition_id = #{entity.definitionId}</if>
            <if test="entity.nowNodeCode != null">and t.now_node_code = #{entity.nowNodeCode}</if>
            <if test="entity.nowNodeType != null">and t.now_node_type = #{entity.nowNodeType}</if>
            <if test="entity.nextNodeCode != null and entity.nextNodeCode != ''">and t.next_node_code =
                #{entity.nextNodeCode}
            </if>
            <if test="entity.nextNodeType != null">and t.next_node_type = #{entity.nextNodeType}</if>
            <if test="entity.skipName != null and entity.skipName != ''">and t.skip_name = #{entity.skip}</if>
            <if test="entity.skipType != null and entity.skipType != ''">and t.skip_type =
                #{entity.skipType}
            </if>
            <if test="entity.skipCondition != null and entity.skipCondition != ''">and t.skip_condition
                =#{skipCondition}
            </if>
            <if test="entity.createTime != null">and t.create_time = #{entity.createTime}</if>
            <if test="entity.updateTime != null">and t.update_time = #{entity.updateTime}</if>
            <if test="entity.delFlag != null  and entity.delFlag != ''">and t.del_flag = #{entity.delFlag}</if>
            <if test="entity.tenantId != null  and entity.tenantId != ''">and t.tenant_id = #{entity.tenantId}</if>
        </where>
    </sql>

    <select id="selectCount" parameterType="org.dromara.warm.flow.orm.entity.FlowSkip" resultType="java.lang.Long">
        select count(*) from flow_skip t
        <include refid="select_parameter"/>
    </select>

    <select id="selectList" parameterType="org.dromara.warm.flow.orm.entity.FlowSkip" resultMap="FlowSkipResult">
        <choose>
            <when test="dataSourceType == 'oracle'.toString()">
                <if test="page !=null and page.pageNum != null and page.pageSize != null">
                    SELECT * FROM ( SELECT TMP.*, ROWNUM ROW_ID FROM (
                </if>
                <include refid="includeAll"/>
                <if test="page !=null and page.pageNum != null and page.pageSize != null">
                    ) TMP WHERE ROWNUM &lt;= #{page.pageSize}) WHERE ROW_ID &gt; #{page.pageNum}
                </if>
            </when>
            <otherwise>
                <include refid="includeAll"/>
                <include refid="paging_end"/>
            </otherwise>
        </choose>
    </select>

    <sql id="includeAll">
        <include refid="selectVo"/>
        <include refid="select_parameter"/>
        <include refid="order_by"/>
    </sql>

    <sql id="mysql_insert_batch">
        insert into flow_skip(
        id,
        definition_id,
        now_node_code,
        now_node_type,
        next_node_code,
        next_node_type,
        skip_name,
        skip_type,
        skip_condition,
        coordinate,
        create_time,
        update_time,
        del_flag,
        tenant_id
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.id},
            #{item.definitionId},
            #{item.nowNodeCode},
            #{item.nowNodeType},
            #{item.nextNodeCode},
            #{item.nextNodeType},
            #{item.skipName},
            #{item.skipType},
            #{item.skipCondition},
            #{item.coordinate},
            #{item.createTime},
            #{item.updateTime},
            #{item.delFlag},
            #{item.tenantId}
            )
        </foreach>
    </sql>

    <sql id="oracle_insert_batch">
        insert into flow_skip(
        id,
        definition_id,
        now_node_code,
        now_node_type,
        next_node_code,
        next_node_type,
        skip_name,
        skip_type,
        skip_condition,
        coordinate,
        create_time,
        update_time,
        del_flag,
        tenant_id
        )
        <foreach collection="list" item="item" separator=" union all ">
            select
            #{item.id},
            #{item.definitionId},
            #{item.nowNodeCode},
            #{item.nowNodeType},
            #{item.nextNodeCode},
            #{item.nextNodeType},
            #{item.skipName},
            #{item.skipType},
            #{item.skipCondition},
            #{item.coordinate},
            #{item.createTime},
            #{item.updateTime},
            #{item.delFlag},
            #{item.tenantId}
            from dual
        </foreach>
    </sql>

    <select id="selectByIds" resultMap="FlowSkipResult">
        <include refid="selectVo"/>
        where t.id in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
        <if test="entity.delFlag != null  and entity.delFlag != ''">and t.del_flag = #{entity.delFlag}</if>
        <if test="entity.tenantId != null  and entity.tenantId != ''">and t.tenant_id = #{entity.tenantId}</if>
    </select>

    <select id="selectById" resultMap="FlowSkipResult">
        <include refid="selectVo"/>
        where t.id = #{id}
        <if test="entity.delFlag != null  and entity.delFlag != ''">and t.del_flag = #{entity.delFlag}</if>
        <if test="entity.tenantId != null  and entity.tenantId != ''">and t.tenant_id = #{entity.tenantId}</if>
    </select>

    <insert id="insert" parameterType="org.dromara.warm.flow.orm.entity.FlowSkip">
        insert into flow_skip
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="definitionId != null">definition_id,</if>
            <if test="nowNodeCode != null and nowNodeCode != ''">now_node_code,</if>
            <if test="nowNodeType != null">now_node_type,</if>
            <if test="nextNodeCode != null and nextNodeCode != ''">next_node_code,</if>
            <if test="nextNodeType != null">next_node_type,</if>
            <if test="skipName != null and skipName != ''">skip_name,</if>
            <if test="skipType != null">skip_type,</if>
            <if test="skipCondition != null and skipCondition != ''">skip_condition,</if>
            <if test="coordinate != null and coordinate != ''">coordinate,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="delFlag != null and delFlag != ''">del_flag,</if>
            <if test="tenantId != null and tenantId != ''">tenant_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="definitionId != null">#{definitionId},</if>
            <if test="nowNodeCode != null and nowNodeCode != ''">#{nowNodeCode},</if>
            <if test="nowNodeType != null">#{nowNodeType},</if>
            <if test="nextNodeCode != null and nextNodeCode != ''">#{nextNodeCode},</if>
            <if test="nextNodeType != null">#{nextNodeType},</if>
            <if test="skipName != null and skipName != ''">#{skipName},</if>
            <if test="skipType != null">#{skipType},</if>
            <if test="skipCondition != null and skipCondition != ''">#{skipCondition},</if>
            <if test="coordinate != null and coordinate != ''">#{coordinate},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="delFlag != null and delFlag != ''">#{delFlag},</if>
            <if test="tenantId != null and tenantId != ''">#{tenantId},</if>
        </trim>
    </insert>

    <update id="updateById" parameterType="org.dromara.warm.flow.orm.entity.FlowSkip">
        update flow_skip
        <trim prefix="SET" suffixOverrides=",">
            <if test="definitionId != null">definition_id = #{definitionId},</if>
            <if test="nowNodeCode != null and nowNodeCode != ''">now_node_code = #{nowNodeCode},</if>
            <if test="nowNodeType != null">now_node_type = #{nowNodeType},</if>
            <if test="nextNodeCode != null and nextNodeCode != ''">next_node_code = #{nextNodeCode},</if>
            <if test="nextNodeType != null">next_node_type = #{nextNodeType},</if>
            <if test="skipName != null and skipName != ''">skip_name = #{skipName},</if>
            <if test="skipType != null">skip_type = #{skipType},</if>
            <if test="skipCondition != null and skipCondition != ''">skip_condition = #{skipCondition},</if>
            <if test="coordinate != null and coordinate != ''">coordinate = #{coordinate},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
        <if test="delFlag != null  and delFlag != ''">and del_flag = #{delFlag}</if>
        <if test="tenantId != null  and tenantId != ''">and tenant_id = #{tenantId}</if>
    </update>

    <delete id="deleteById">
        delete
        from flow_skip
        where id = #{id}
        <if test="entity.tenantId != null  and entity.tenantId != ''">and tenant_id = #{entity.tenantId}</if>
    </delete>

    <update id="updateByIdLogic">
        update flow_skip
        set del_flag = #{logicDeleteValue}
        where id = #{id}
        <if test="entity.tenantId != null  and entity.tenantId != ''">and tenant_id = #{entity.tenantId}</if>
        <if test="logicNotDeleteValue != null and logicNotDeleteValue != ''">and del_flag = #{logicNotDeleteValue}
        </if>
    </update>

    <delete id="deleteByIds">
        delete from flow_skip where id in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
        <if test="entity.tenantId != null  and entity.tenantId != ''">and tenant_id = #{entity.tenantId}</if>
    </delete>

    <update id="updateByIdsLogic">
        update flow_skip
        set del_flag = #{logicDeleteValue}
        where id in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
        <if test="entity.tenantId != null  and entity.tenantId != ''">and tenant_id = #{entity.tenantId}</if>
        <if test="logicNotDeleteValue != null and logicNotDeleteValue != ''">and del_flag = #{logicNotDeleteValue}
        </if>
    </update>


    <delete id="delete" parameterType="org.dromara.warm.flow.orm.entity.FlowSkip">
        delete from flow_skip
        <where>
            <if test="id != null">and id = #{id}</if>
            <if test="definitionId != null">and definition_id = #{definitionId}</if>
            <if test="nowNodeCode != null and nowNodeCode != ''">and now_node_code = #{nowNodeCode}</if>
            <if test="nowNodeType != null">and now_node_type = #{nowNodeType}</if>
            <if test="nextNodeCode != null and nextNodeCode != ''">and next_node_code = #{nextNodeCode}</if>
            <if test="nextNodeType != null">and next_node_type = #{nextNodeType}</if>
            <if test="skipName != null and skipName != ''">and skip_name = #{skipName}</if>
            <if test="skipType != null">and skip_type = #{skipType}</if>
            <if test="coordinate != null and coordinate != ''">and coordinate = #{coordinate}</if>
            <if test="skipCondition != null and skipCondition != ''">and skip_condition = #{skipCondition}</if>
            <if test="createTime != null">and create_time = #{createTime}</if>
            <if test="updateTime != null">and update_time = #{updateTime}</if>
            <if test="tenantId != null and tenantId != ''">and tenant_id = #{tenantId}</if>
        </where>
    </delete>

    <update id="updateLogic">
        update flow_skip
        set del_flag = #{logicDeleteValue}
        <where>
            <if test="entity.id != null">and id = #{entity.id}</if>
            <if test="entity.definitionId != null">and definition_id = #{entity.definitionId}</if>
            <if test="entity.nowNodeCode != null and entity.nowNodeCode != ''">and now_node_code =
                #{entity.nowNodeCode}
            </if>
            <if test="entity.nowNodeType != null">and now_node_type = #{entity.nowNodeType}</if>
            <if test="entity.nextNodeCode != null and nextNodeCode != ''">and next_node_code =
                #{entity.nextNodeCode}
            </if>
            <if test="entity.nextNodeType != null">and next_node_type = #{entity.nextNodeType}</if>
            <if test="entity.skipName != null and entity.skipName != ''">and skip_name = #{entity.skipName}</if>
            <if test="entity.skipType != null">and skip_type = #{entity.skipType}</if>
            <if test="entity.coordinate != null and entity.coordinate != ''">and coordinate = #{entity.coordinate}
            </if>
            <if test="entity.skipCondition != null and entity.skipCondition != ''">and skip_condition =
                #{entity.skipCondition}
            </if>
            <if test="entity.createTime != null">and create_time = #{entity.createTime}</if>
            <if test="entity.updateTime != null">and update_time = #{entity.updateTime}</if>
            <if test="entity.tenantId != null and entity.tenantId != ''">and tenant_id = #{entity.tenantId}</if>
            <if test="logicNotDeleteValue != null and logicNotDeleteValue != ''">and del_flag =
                #{logicNotDeleteValue}
            </if>
        </where>
    </update>

    <delete id="deleteSkipByDefIds">
        delete from flow_skip where definition_id in
        <foreach item="definitionId" collection="defIds" open="(" separator="," close=")">
            #{definitionId}
        </foreach>
        <if test="entity.tenantId != null  and entity.tenantId != ''">and tenant_id = #{entity.tenantId}</if>
    </delete>

    <update id="updateSkipByDefIdsLogic">
        update flow_skip
        set del_flag = #{logicDeleteValue}
        where definition_id in
        <foreach item="definitionId" collection="defIds" open="(" separator="," close=")">
            #{definitionId}
        </foreach>
        <if test="entity.tenantId != null  and entity.tenantId != ''">and tenant_id = #{entity.tenantId}</if>
        <if test="logicNotDeleteValue != null and logicNotDeleteValue != ''">and del_flag = #{logicNotDeleteValue}
        </if>
    </update>

    <insert id="saveBatch" parameterType="org.dromara.warm.flow.orm.entity.FlowSkip">
        <choose>
            <when test="dataSourceType == 'oracle'.toString()">
                <include refid="oracle_insert_batch"/>
            </when>
            <otherwise>
                <include refid="mysql_insert_batch"/>
            </otherwise>
        </choose>
    </insert>
</mapper>
